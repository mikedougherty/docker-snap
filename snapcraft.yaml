name: docker
version: 1.13.0-0
summary: Docker Linux container runtime
description: Docker complements kernel namespacing with a high-level API which operates at the process level. It runs unix processes with strong guarantees of isolation and repeatability across servers.

confinement: strict
grade: stable

plugs:
  support:
    interface: docker-support
  privileged:
    interface: docker-support
    privileged-containers: true
  docker-cli:
    interface: docker
slots:
  docker-daemon:
    interface: docker

apps:
  docker:
    command: docker-wrapper docker
    plugs:
      - docker-cli
      - network
      - home

  dockerd:
    command: dockerd-wrapper
    daemon: simple
    plugs:
      - network-bind
      - firewall-control
      - support
      - privileged
    slots:
      - docker-daemon

  # TODO determine if we can "provide" a "docker-compose" in PATH directly (since this'll show up as "docker.compose" in the user PATH)
  compose:
    command: docker-wrapper docker-compose
    plugs:
      - docker-cli
      - network
      - home

parts:
  snappy-bins:
    plugin: shell
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      install -d "$DESTDIR/bin"
      install -t "$DESTDIR/bin" "$SNAPDIR"/bin/*
    stage-packages:
      #- adduser
      - mount

  docker:
    plugin: shell
    source: https://github.com/docker/docker/archive/v1.13.0.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-eux', '-o', 'pipefail']
    shell-command: |
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys F1831DDAFC42E99D
      add-apt-repository -r 'deb http://ppa.launchpad.net/snappy-dev/tools/ubuntu xenial main' ||:
      add-apt-repository ppa:jonathonf/golang-1.7
      apt update
      apt install -y golang-1.7
      export GOROOT=/usr/lib/go-1.7
      export PATH="$GOROOT/bin:$PATH"
      go version

      source "$SNAPDIR/prep-docker-build.sh"
      
      ./hack/make.sh dynbinary
      
      ls -l bundles/latest/*/
      
      clientBin='bundles/latest/dynbinary-client/docker'
      daemonBin='bundles/latest/dynbinary-daemon/dockerd'
      "$clientBin" -v
      "$daemonBin" -v
      "$clientBin" -v | grep -q "$DOCKER_GITCOMMIT"
      "$daemonBin" -v | grep -q "$DOCKER_GITCOMMIT"
      
      install -d "$DESTDIR/bin"
      install -T "$(readlink -f "$clientBin")" "$DESTDIR/bin/docker"
      install -T "$(readlink -f "$daemonBin")" "$DESTDIR/bin/dockerd"
    build-packages:
      - software-properties-common
      - btrfs-tools
      - gcc
      - libc6-dev
      - libdevmapper-dev
      - libltdl-dev
      - patch
      - git
      - pkg-config
    stage-packages:
      - aufs-tools

  containerd:
    plugin: shell
    source: https://github.com/docker/containerd/archive/d7975b89804b207b68f8b446cf1e2af72589bfcf.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      export GOROOT=/usr/lib/go-1.7
      export PATH="$GOROOT/bin:$PATH"
      mkdir -p .gopath/src/github.com/docker
      ln -sfT "$PWD" .gopath/src/github.com/docker/containerd
      export GOPATH="$PWD/.gopath"

      make GIT_COMMIT= GIT_BRANCH= LDFLAGS=

      install -d "$DESTDIR/bin"
      install -T bin/containerd "$DESTDIR/bin/docker-containerd"
      install -T bin/containerd-shim "$DESTDIR/bin/docker-containerd-shim"
      install -T bin/ctr "$DESTDIR/bin/docker-containerd-ctr"
    build-packages:
      - golang-go
      - make

  runc:
    plugin: shell
    source: https://github.com/opencontainers/runc/archive/51371867a01c467f08af739783b8beafc154c4d7.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      export GOROOT=/usr/lib/go-1.7
      export PATH="$GOROOT/bin:$PATH"
      mkdir -p .gopath/src/github.com/opencontainers
      ln -sfT "$PWD" .gopath/src/github.com/opencontainers/runc
      export GOPATH="$PWD/.gopath"

      make BUILDTAGS='seccomp apparmor selinux' COMMIT=

      install -d "$DESTDIR/bin"
      install -T runc "$DESTDIR/bin/docker-runc"
    build-packages:
      - golang-go
      - libapparmor-dev
      - libseccomp-dev
      - make

  compose:
    plugin: python2
    source: https://github.com/docker/compose/archive/1.10.0.tar.gz
    source-type: tar

# vim:set et ts=2 sw=2:
